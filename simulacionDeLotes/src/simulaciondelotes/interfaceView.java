/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package simulaciondelotes;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author roble
 */
public class interfaceView extends javax.swing.JFrame {

    /**
     * Creates new form interfaceView
     */
    public interfaceView() {
        initComponents();
        this.setLocationRelativeTo(null);//Centrar pantalla
        time = new Timer(1000,active);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelProcesos = new javax.swing.JLabel();
        inputNumProcesos = new javax.swing.JTextField();
        botonGenerar = new javax.swing.JButton();
        botonGetResultados = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelLotePendiente = new javax.swing.JLabel();
        lotePendiente = new javax.swing.JLabel();
        lableRelojGlobal = new javax.swing.JLabel();
        relojGlobal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        nombreEnEjecucion = new javax.swing.JLabel();
        operacionEnEjecucion = new javax.swing.JLabel();
        tmeEnEjecucion = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        nombreEnEspera = new javax.swing.JLabel();
        operacionEnEspera = new javax.swing.JLabel();
        tmeEnEspera = new javax.swing.JLabel();
        procesosEnEspera = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        nombreTerminado = new javax.swing.JLabel();
        operacionTerminada = new javax.swing.JLabel();
        procesosTerminados = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 91, 91));

        labelProcesos.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        labelProcesos.setForeground(new java.awt.Color(255, 255, 255));
        labelProcesos.setText("# Procesos:");

        inputNumProcesos.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        inputNumProcesos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        botonGenerar.setBackground(new java.awt.Color(79, 211, 178));
        botonGenerar.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        botonGenerar.setForeground(new java.awt.Color(0, 51, 51));
        botonGenerar.setText("Generar");
        botonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGenerarActionPerformed(evt);
            }
        });

        botonGetResultados.setBackground(new java.awt.Color(76, 179, 179));
        botonGetResultados.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        botonGetResultados.setForeground(new java.awt.Color(0, 51, 51));
        botonGetResultados.setText("Obtener Resultados");
        botonGetResultados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonGetResultados.setBorderPainted(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("En Espera:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Terminados:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("En Ejecuci√≥n:");

        labelLotePendiente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelLotePendiente.setForeground(new java.awt.Color(255, 255, 255));
        labelLotePendiente.setText("# Lotes Pendientes:");

        lotePendiente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lotePendiente.setForeground(new java.awt.Color(255, 255, 255));
        lotePendiente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lotePendiente.setText("0");

        lableRelojGlobal.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        lableRelojGlobal.setForeground(new java.awt.Color(255, 255, 255));
        lableRelojGlobal.setText("Reloj global:");

        relojGlobal.setFont(new java.awt.Font("Source Code Pro", 0, 16)); // NOI18N
        relojGlobal.setForeground(new java.awt.Color(255, 255, 255));
        relojGlobal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        relojGlobal.setText("00:00");

        jPanel2.setBackground(new java.awt.Color(206, 218, 218));

        nombreEnEjecucion.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        nombreEnEjecucion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreEnEjecucion.setText(" ");

        operacionEnEjecucion.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        operacionEnEjecucion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operacionEnEjecucion.setText(" ");

        tmeEnEjecucion.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tmeEnEjecucion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tmeEnEjecucion.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tmeEnEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operacionEnEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreEnEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(nombreEnEjecucion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(operacionEnEjecucion)
                .addGap(18, 18, 18)
                .addComponent(tmeEnEjecucion)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(206, 218, 218));
        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));

        nombreEnEspera.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        nombreEnEspera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreEnEspera.setText(" ");

        operacionEnEspera.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        operacionEnEspera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operacionEnEspera.setText(" ");

        tmeEnEspera.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        tmeEnEspera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tmeEnEspera.setText(" ");

        procesosEnEspera.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        procesosEnEspera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        procesosEnEspera.setText(" ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(procesosEnEspera, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(operacionEnEspera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreEnEspera, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tmeEnEspera, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(nombreEnEspera)
                .addGap(18, 18, 18)
                .addComponent(operacionEnEspera)
                .addGap(26, 26, 26)
                .addComponent(tmeEnEspera)
                .addGap(35, 35, 35)
                .addComponent(procesosEnEspera)
                .addGap(31, 31, 31))
        );

        jPanel4.setBackground(new java.awt.Color(206, 218, 218));

        nombreTerminado.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        nombreTerminado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombreTerminado.setText(" ");

        operacionTerminada.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        operacionTerminada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        operacionTerminada.setText(" ");

        procesosTerminados.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        procesosTerminados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        procesosTerminados.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(procesosTerminados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(operacionTerminada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreTerminado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(nombreTerminado)
                .addGap(18, 18, 18)
                .addComponent(operacionTerminada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(procesosTerminados)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelProcesos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inputNumProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(botonGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lableRelojGlobal)
                        .addGap(49, 49, 49)
                        .addComponent(relojGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 31, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(labelLotePendiente)
                .addGap(18, 18, 18)
                .addComponent(lotePendiente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonGetResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProcesos)
                    .addComponent(inputNumProcesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGenerar)
                    .addComponent(lableRelojGlobal)
                    .addComponent(relojGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLotePendiente)
                    .addComponent(lotePendiente)
                    .addComponent(botonGetResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Implementaci√≥n de ActionListener que se utiliza para activar el cronometro.
     * Cada que se active, incrementa las centesima de segundo (centesimaSeg) y
     * actualiza los contadores de tiempo (segundo, minutos y horas) seg√∫n lo
     * requieran.
     * 
     */
    private ActionListener active = new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent e) {
            
            //Actualiza TME del Programador en ejecucion
            if(index < loteActual.getTamanioList()){
                
                // Crea un objeto temporal de tipo Programador con el programador 
                // en la posicion index

                Programador tempProgramador = (Programador) loteActual.getLista().getObjeto(index);

                if(tempProgramador.getTME() > 0){
                    tempProgramador.decrementarTME();
                    segundos++;
            
                    // Actualiza los contadores de tiempo
                    if(segundos == 60){
                        minutos++;
                        segundos = 0;
                    }
                    actualizarRelojGlobal();
                } else{
                    sigProgramador();
                }
            }
            // Llama al m√©todo para actulizar el tiempo en pantalla
            
            
            
        }
        
    };

    /**
     * Actualiza la visualizacion del temporizador en un formato 
     * HH:MM:SS:CC, en el que:
     * - HH son las horas
     * - MM son los minutos
     * - SS son los segundos
     * - CC son las centesimas de segundo
     * 
     * Nota: Los valores menores a 10, se toman como 0
     */
    public void actualizarRelojGlobal(){
        
        // Actualiza el reloj global
        String tempo = (minutos<=9?"0":" ")+minutos+":"+
                    (segundos<=9?"0":" ")+segundos;
        //relojGlobal.setText(tempo);
        Programador tempProgramador = (Programador) loteActual.getLista().getObjeto(index);
        // Muestra si hay en espera...
        showEnEspera();

        //Actualiza TME del Programador en ejecucion
        nombreEnEjecucion.setText(tempProgramador.getId() + "- " + tempProgramador.getNombre());
        String operacionProgramador = tempProgramador.getOperacion().getNum1()
                    + " " + tempProgramador.getOperacion().getOperacion()
                    + " " + tempProgramador.getOperacion().getNum1();
        operacionEnEjecucion.setText("Operacion: " + operacionProgramador);
        tmeEnEjecucion.setText("TME: " + tempProgramador.getTME());
        relojGlobal.setText(tempo);
        
    }

    
    /**
     * Incrementa el Index para avanzar al siguiente programador
     * y muestra los datos del siguiente programador en ejecucion
     */
    public void sigProgramador(){
        index++;
        if(index<loteActual.getTamanioList()){
            
            Programador tempProgramador = (Programador) loteActual.getLista().getObjeto(index);
            nombreEnEjecucion.setText(tempProgramador.getId() + "- " + tempProgramador.getNombre());
            String operacionProgramador = tempProgramador.getOperacion().getNum1()
                        + " " + tempProgramador.getOperacion().getOperacion()
                        + " " + tempProgramador.getOperacion().getNum1();
            operacionEnEjecucion.setText("Operacion: " + operacionProgramador);
            tmeEnEjecucion.setText("TME: " + tempProgramador.getTME());
            
        }
    }
    
    private void showEnEspera(){
        /*
        if((index+1)%5==0){
               cantLotes--; 
        }*/
        if(index<loteActual.getTamanioList()-1){
            int numProcesosRestantes = (loteActual.getTamanioList()-1) - index;
            
            
            Programador tempProgramador = (Programador) loteActual.getLista().getObjeto(index+1);
            nombreEnEspera.setText(tempProgramador.getId() + "- " + tempProgramador.getNombre());
            String operacionProgramador = tempProgramador.getOperacion().getNum1()
                        + " " + tempProgramador.getOperacion().getOperacion()
                        + " " + tempProgramador.getOperacion().getNum1();
            operacionEnEspera.setText("Operacion: " + operacionProgramador);
            tmeEnEspera.setText("TME: " + tempProgramador.getTME());
            
            procesosEnEspera.setText(numProcesosRestantes + " procesos pendientes");
            lotePendiente.setText("" + cantLotes);
        } else{
            nombreEnEspera.setText(" ");
            operacionEnEspera.setText(" ");
            tmeEnEspera.setText(" ");
            procesosEnEspera.setText(" ");
        }
    }
    
    private void botonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGenerarActionPerformed
        // Inicializacon del temporizzador
        index = 0;
        loteActual = new GeneradorLote();
        
        segundos = 0;    
        minutos = 0;
        
        time.start();
        int numProcesos = Integer.parseInt(inputNumProcesos.getText());
        GeneradorLote newLote  = new GeneradorLote();
        newLote.generarProceso(numProcesos, numLote);
        numLote = newLote.getNumLote();
        loteActual = newLote;
        cantLotes = newLote.getCantLote()-1;
    }//GEN-LAST:event_botonGenerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new interfaceView().setVisible(true);
            }
        });
    }
    
    private int numLote=0;
    private int cantLotes;
    private int index;
    private GeneradorLote loteActual;
    private Timer time;
    private int segundos;
    private int minutos;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonGenerar;
    private javax.swing.JButton botonGetResultados;
    private javax.swing.JTextField inputNumProcesos;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelLotePendiente;
    private javax.swing.JLabel labelProcesos;
    private javax.swing.JLabel lableRelojGlobal;
    private javax.swing.JLabel lotePendiente;
    private javax.swing.JLabel nombreEnEjecucion;
    private javax.swing.JLabel nombreEnEspera;
    private javax.swing.JLabel nombreTerminado;
    private javax.swing.JLabel operacionEnEjecucion;
    private javax.swing.JLabel operacionEnEspera;
    private javax.swing.JLabel operacionTerminada;
    private javax.swing.JLabel procesosEnEspera;
    private javax.swing.JLabel procesosTerminados;
    private javax.swing.JLabel relojGlobal;
    private javax.swing.JLabel tmeEnEjecucion;
    private javax.swing.JLabel tmeEnEspera;
    // End of variables declaration//GEN-END:variables
}
